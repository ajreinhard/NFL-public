league_json$schedule[[1]]$away$totalPoints
sapply(league_json$schedule, function(x) x$away$totalPoints)
sapply(league_json$schedule, function(x) x$home$totalPoints)
sapply(league_json$schedule, function(x) x$away$teamId)
sapply(league_json$schedule[[2]], function(x) x$away$teamId)
sapply(league_json$schedule[[1]], function(x) x$away$teamId)
league_json$schedule[[1]]$away$totalPoints
sapply(league_json$schedule, function(x) x$away$teamId)
lapply(league_json$schedule, function(x) x$away$teamId)
sapply(league_json$schedule, function(x) x['away']$teamId)
sapply(league_json$schedule, function(x) x['away'])
sapply(league_json$schedule, function(x) x['away']['totalPoints'])
sapply(league_json$schedule, function(x) x$away$['totalPoints'])
sapply(league_json$schedule, function(x) x$away['totalPoints'])
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
'id_away' = team_names[x$away['teamId']],
'id_home' = team_names[x$home['teamId']],
'away_score' = x$away['totalPoints'],
'home_score' = x$home['totalPoints'],
'winner' = x$winner
)
}) %>% t %>% data.frame
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
'id_away' = team_names[x$away['teamId']],
'id_home' = team_names[x$home['teamId']],
'away_score' = x$away['totalPoints'],
'home_score' = x$home['totalPoints'],
'winner' = x$winner
)
}) %>% t %>% data.frame
sapply(league_json$schedule, function(x) x$away['teamId'])
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
'id_away' = team_names[unlist(x$away['teamId'])],
'id_home' = team_names[unlist(x$home['teamId'])],
'away_score' = x$away['totalPoints'],
'home_score' = x$home['totalPoints'],
'winner' = x$winner
)
}) %>% t %>% data.frame
league_sched_df
### get team scores by week
team_score_df <- league_sched_df %>%
filter(winner != 'UNDECIDED') %>%
pivot_longer(c(id_home, id_away), names_to = 'home_away', values_to = 'team', names_prefix = 'id_') %>%
mutate(
team_score = ifelse(home_away == 'home', home_score, away_score),
week = as.numeric(week),
team_score = as.numeric(team_score)
) %>%
select(game_id, week, team, team_score)
league_sched_df
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
'id_away' = team_names[unlist(x$away['teamId'])],
'id_home' = team_names[unlist(x$home['teamId'])],
'away_score' = unlist(x$away['totalPoints']),
'home_score' = unlist(x$home['totalPoints']),
'winner' = x$winner
)
}) %>% t %>% data.frame
### get team scores by week
team_score_df <- league_sched_df %>%
filter(winner != 'UNDECIDED') %>%
pivot_longer(c(id_home, id_away), names_to = 'home_away', values_to = 'team', names_prefix = 'id_') %>%
mutate(
team_score = ifelse(home_away == 'home', home_score, away_score),
week = as.numeric(week),
team_score = as.numeric(team_score)
) %>%
select(game_id, week, team, team_score)
league_sched_df
### get team scores by week
team_score_df <- league_sched_df %>%
filter(winner != 'UNDECIDED') %>%
pivot_longer(c(id_home, id_away), names_to = 'home_away', values_to = 'team', names_prefix = 'id_') %>%
mutate(
team_score = ifelse(home_away == 'home', home_score.totalPoints, away_score.totalPoints),
week = as.numeric(week),
team_score = as.numeric(team_score)
) %>%
select(game_id, week, team, team_score)
### get team scores by week
team_score_df <- league_sched_df %>%
filter(winner != 'UNDECIDED') %>%
pivot_longer(c(id_home, id_away), names_to = 'home_away', values_to = 'team', names_prefix = 'id_') %>%
mutate(
team_score = ifelse(home_away == 'home', home_score.totalPoints, away_score.totalPoints),
week = as.numeric(week),
team_score = as.numeric(team_score)
) %>%
select(game_id, week, team, team_score)
team_score_df
### join to create round robins & outcomes
rr_matchup_df <- team_score_df %>%
left_join(team_score_df, by = 'week', suffix = c('','_rr')) %>%
filter(team != team_rr) %>%
mutate(
rr_result = case_when(
team_score > team_score_rr ~ 'W',
team_score < team_score_rr ~ 'L',
team_score == team_score_rr ~ 'T'
),
actual_result = ifelse(game_id == game_id_rr, rr_result, NA)
)
rr_matchup_df
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, team_rr, week), paste0(team_rr, team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1)
rr_matchup_df
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = abs(team_score - team_score_rr)) %>%
pull(score_diff) %>% summary
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = abs(team_score - team_score_rr)) %>%
pull(score_diff) %>%
quantile(.1)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = abs(team_score - team_score_rr)) %>%
pull(score_diff) %>%
quantile(.1)
rr_matchup_df %>%
#mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
#group_by(matchup_name) %>%
#mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
#ungroup %>%
mutate(score_diff = team_score - team_score_rr) %>%
pull(score_diff) %>%
quantile(.1)
rr_matchup_df %>%
#mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
#group_by(matchup_name) %>%
#mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
#ungroup %>%
mutate(score_diff = abs(team_score - team_score_rr)) %>%
pull(score_diff) %>%
quantile(.1)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = abs(team_score - team_score_rr)) %>%
pull(score_diff) %>%
quantile(.2)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = team_score - team_score_rr) %>%
pull(score_diff) %>%
quantile(.6)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = team_score - team_score_rr) %>%
pull(score_diff) %>%
quantile(.7)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = team_score - team_score_rr) %>%
pull(score_diff) %>%
quantile(.6)
setwd('C:/Users/Owner/Documents/GitHub/NFL-public')
source('https://github.com/ajreinhard/data-viz/raw/master/ggplot/plot_SB.R')
elo_df <- get_538elo() %>% double_games()
qb_wins <- elo_df %>%
filter(result > 0) %>%
select(season, week, team, team_qb) %>%
full_join(all_weeks, by = character(), suffix = c('','_at')) %>%
filter(season <= season_at & week <= week_at) %>%
group_by(season_at, week_at) %>%
summarise(n = n())
all_weeks <- elo_df %>%
filter(season >= 1966) %>%
select(season, week) %>%
distinct
qb_wins <- elo_df %>%
filter(result > 0) %>%
select(season, week, team, team_qb) %>%
full_join(all_weeks, by = character(), suffix = c('','_at')) %>%
filter(season <= season_at & week <= week_at) %>%
group_by(season_at, week_at) %>%
summarise(n = n())
qb_wins
qb_wins <- elo_df %>%
filter(result > 0) %>%
select(season, week, team_qb) %>%
full_join(all_weeks, by = character(), suffix = c('','_at')) %>%
filter(season <= season_at & week <= week_at) %>%
group_by(season_at, week_at, team_qb) %>%
summarise(n = n())
qb_wins
qb_wins <- elo_df %>%
filter(result > 0) %>%
select(season, week, team_qb) %>%
full_join(all_weeks, by = character(), suffix = c('','_at')) %>%
filter(season <= season_at & week <= week_at) %>%
group_by(season_at, week_at, team_qb) %>%
summarise(n = n()) %>%
arrange(-n)
qb_wins <- elo_df %>%
filter(result > 0) %>%
select(season, week, team_qb) %>%
full_join(all_weeks, by = character(), suffix = c('','_at')) %>%
filter(season <= season_at & week <= week_at) %>%
group_by(season_at, week_at, team_qb) %>%
summarise(n = n()) %>%
arrange(-n) %>%
ungroup
qb_wins
team_qb %>%
filter(team_qb == 'Tom Brady')
qb_wins %>%
filter(team_qb == 'Tom Brady')
qb_wins %>%
filter(team_qb == 'Tom Brady') %>%
arrange(season_at, week_at)
qb_wins %>%
filter(team_qb == 'Tom Brady') %>%
arrange(season_at, week_at) %>%
view
all_weeks <- elo_df %>%
filter(season >= 1966) %>%
select(season, week) %>%
distinct %>%
mutate(week_order = row_number())
all_weeks
qb_wins <- elo_df %>%
filter(result > 0) %>%
select(season, week, team_qb) %>%
left_join(all_weeks) %>%
full_join(all_weeks %>% select(week_order), by = character(), suffix = c('','_stop')) %>%
filter(week_order <= week_order_stop) %>%
group_by(week_order_stop, team_qb) %>%
summarise(n = n()) %>%
arrange(-n) %>%
ungroup
qb_wins %>%
filter(team_qb == 'Tom Brady') %>%
arrange(season_at, week_at) %>%
view
qb_wins %>%
filter(team_qb == 'Tom Brady') %>%
arrange(week_order_stop) %>%
view
qb_wins <- elo_df %>%
filter(result > 0) %>%
select(season, week, team_qb) %>%
left_join(all_weeks) %>%
full_join(all_weeks %>% select(week_order), by = character(), suffix = c('','_stop')) %>%
filter(week_order <= week_order_stop) %>%
group_by(week_order_stop, team_qb) %>%
summarise(n = n()) %>%
arrange(-n) %>%
mutate(rank = row_number()) %>%
ungroup
qb_wins %>%
filter(team_qb == 'Tom Brady') %>%
arrange(week_order_stop) %>%
view
qb_wins %>%
filter(week_order_stop == 1093) %>%
arrange(-n) %>%
view
qb_wins %>%
filter(week_order_stop == 1) %>%
arrange(-n) %>%
view
elo_df %>%
filter(result > 0) %>%
select(season, week, team_qb) %>%
left_join(all_weeks)
qb_wins <- elo_df %>%
filter(result > 0) %>%
select(season, week, team_qb) %>%
left_join(all_weeks) %>%
mutate(week_order = ifelse(is.na(week_order), 0, week_order)) %>%
full_join(all_weeks %>% select(week_order), by = character(), suffix = c('','_stop')) %>%
filter(week_order <= week_order_stop) %>%
group_by(week_order_stop, team_qb) %>%
summarise(n = n()) %>%
arrange(-n) %>%
mutate(rank = row_number()) %>%
ungroup
qb_wins %>%
filter(week_order_stop == 1) %>%
arrange(-n) %>%
view
qb_wins %>%
filter(week_order_stop == 1) %>%
arrange(-n) %>%
slice(1:20) %>%
view
qb_wins %>%
filter(week_order_stop == 100) %>%
arrange(-n) %>%
slice(1:20) %>%
view
qb_wins <- elo_df %>%
filter(result > 0) %>%
select(season, week, team_qb) %>%
left_join(all_weeks) %>%
mutate(week_order = ifelse(is.na(week_order), 0, week_order)) %>%
full_join(all_weeks %>% select(week_order), by = character(), suffix = c('','_stop')) %>%
filter(week_order <= week_order_stop & team_qb != '') %>%
group_by(week_order_stop, team_qb) %>%
summarise(n = n()) %>%
arrange(-n) %>%
mutate(rank = row_number()) %>%
ungroup
qb_wins %>%
filter(week_order_stop == 100) %>%
arrange(-n) %>%
slice(1:20) %>%
view
qb_wins %>%
filter(week_order_stop == 1) %>%
arrange(-n) %>%
slice(1:20) %>%
view
qb_wins %>%
filter(week_order_stop == 1093) %>%
arrange(-n) %>%
slice(1:20) %>%
view
elo_df %>%
filter(team == 'CLE' & season >= 1999) %>%
group_by(team_qb) %>%
summarise(
tot_starts = n(),
last_start = max(gameday),
first_start = max(gameday)
)
elo_df %>%
filter(team == 'CLE' & season >= 1999) %>%
group_by(team_qb) %>%
summarise(
tot_starts = n(),
last_start = max(gameday),
first_start = max(gameday)
) %>%
arrange(first_start)
elo_df %>%
filter(team == 'CLE' & season >= 1999) %>%
group_by(team_qb) %>%
summarise(
tot_starts = n(),
last_start = max(gameday),
first_start = min(gameday)
) %>%
arrange(first_start) %>%
all_qb_seasons <- elo_df %>%
elo_df %>%
filter(team == 'CLE' & season >= 1999) %>%
group_by(team_qb) %>%
summarise(
tot_starts = n(),
last_start = max(gameday),
first_start = min(gameday)
) %>%
arrange(first_start) %>%
pull(team_qb)
all_qbs <- elo_df %>%
filter(team == 'CLE' & season >= 1999) %>%
group_by(team_qb) %>%
summarise(
tot_starts = n(),
last_start = max(gameday),
first_start = min(gameday)
) %>%
arrange(first_start) %>%
pull(team_qb)
all_qbs <- elo_df %>%
filter(team == 'CLE' & season >= 1999) %>%
group_by(team_qb) %>%
summarise(
tot_starts = n(),
last_start = max(gameday),
first_start = min(gameday),
.groups = 'drop'
) %>%
arrange(first_start) %>%
pull(team_qb)
elo_df %>%
filter(team == 'CLE' & season >= 1999) %>%
group_by(team_qb) %>%
summarise(
tot_starts = n(),
last_start = max(gameday),
first_start = min(gameday),
.groups = 'drop'
) %>%
arrange(first_start) %>%
pull(team_qb)
elo_df %>%
filter(team == 'CLE' & season >= 1999) %>%
group_by(team_qb) %>%
summarise(
tot_starts = n(),
last_start = max(gameday),
first_start = min(gameday),
.groups = 'drop'
) %>%
arrange(first_start) %>%
pull(team_qb) %>%
paste(collapse = ', ')
elo_df %>%
filter(team == 'CLE' & season >= 2006) %>%
group_by(team_qb) %>%
summarise(
tot_starts = n(),
last_start = max(gameday),
first_start = min(gameday),
.groups = 'drop'
) %>%
arrange(first_start) %>%
pull(team_qb) %>%
paste(collapse = ', ')
library(tidyverse)
# Lee Sharpe's brightness function ----------------------------------------
brightness <- function(hex) {
result <- rep(0, length(hex))
for (i in 2:7)
{
ch <- substr(hex, i, i)
result <- result + ifelse(i %% 2 == 0, 16, 1) * case_when(
ch == "0" ~ 0, ch == "1" ~ 1, ch == "2" ~ 2, ch == "3" ~ 3, ch == "4" ~ 4,
ch == "5" ~ 5, ch == "6" ~ 6, ch == "7" ~ 7, ch == "8" ~ 8, ch == "9" ~ 9,
ch == "a" | ch == "A" ~ 10,
ch == "b" | ch == "B" ~ 11,
ch == "c" | ch == "C" ~ 12,
ch == "d" | ch == "D" ~ 13,
ch == "e" | ch == "E" ~ 14,
ch == "f" | ch == "F" ~ 15,
TRUE ~ 0
)
}
return(result)
}
# load and prepare data ---------------------------------------------------
stats <- nflfastR::load_player_stats()
all <- stats %>%
filter(season >= 2006) %>%
filter(!is.na(dakota)) %>%
mutate(gid = glue::glue("{season}_{formatC(week, width=2, flag='0')}")) %>%
left_join(nflfastR::teams_colors_logos, by = c("recent_team" = "team_abbr")) %>%
group_by(player_id) %>%
arrange(season) %>%
mutate(team_color = last(team_color), team_color2 = last(team_color2)) %>%
ungroup()
breaks <- all %>%
filter(week == 1) %>%
pull(gid) %>%
unique()
install.packages('nflfastr')
install.packages('nflfastR')
