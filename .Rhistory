'home_score' = x$home$totalPoints,
'winner' = x$winner
)
}) %>% t %>% data.frame
c(
'game_id' = x$id,
#'week' = x$matchupPeriodId,
#'id_away' = team_names[x$away$teamId],
#'id_home' = team_names[x$home$teamId],
#'away_score' = x$away$totalPoints,
#'home_score' = x$home$totalPoints,
'winner' = x$winner
)
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
#'week' = x$matchupPeriodId,
#'id_away' = team_names[x$away$teamId],
#'id_home' = team_names[x$home$teamId],
#'away_score' = x$away$totalPoints,
#'home_score' = x$home$totalPoints,
'winner' = x$winner
)
}) %>% t %>% data.frame
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
#'week' = x$matchupPeriodId,
#'id_away' = team_names[x$away$teamId],
#'id_home' = team_names[x$home$teamId],
'away_score' = x$away$totalPoints,
'home_score' = x$home$totalPoints,
'winner' = x$winner
)
}) %>% t %>% data.frame
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
'id_away' = team_names[x$away$teamId],
'id_home' = team_names[x$home$teamId],
#'away_score' = x$away$totalPoints,
#'home_score' = x$home$totalPoints,
'winner' = x$winner
)
}) %>% t %>% data.frame
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
#'week' = x$matchupPeriodId,
'id_away' = team_names[x$away$teamId],
'id_home' = team_names[x$home$teamId],
#'away_score' = x$away$totalPoints,
#'home_score' = x$home$totalPoints,
'winner' = x$winner
)
}) %>% t %>% data.frame
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
#'id_away' = team_names[x$away$teamId],
#'id_home' = team_names[x$home$teamId],
#'away_score' = x$away$totalPoints,
#'home_score' = x$home$totalPoints,
'winner' = x$winner
)
}) %>% t %>% data.frame
league_sched_df
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
#'id_away' = team_names[x$away$teamId],
#'id_home' = team_names[x$home$teamId],
'away_score' = x$away$totalPoints,
'home_score' = x$home$totalPoints,
'winner' = x$winner
)
}) %>% t %>% data.frame
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
'id_away' = team_names[x$away$teamId],
'id_home' = team_names[x$home$teamId],
#'away_score' = x$away$totalPoints,
#'home_score' = x$home$totalPoints,
'winner' = x$winner
)
}) %>% t %>% data.frame
league_json$schedule[[1]]$away$teamId
league_json$schedule[[1]]$away$totalPoints
sapply(league_json$schedule, function(x) x$away$totalPoints)
sapply(league_json$schedule, function(x) x$home$totalPoints)
sapply(league_json$schedule, function(x) x$away$teamId)
sapply(league_json$schedule[[2]], function(x) x$away$teamId)
sapply(league_json$schedule[[1]], function(x) x$away$teamId)
league_json$schedule[[1]]$away$totalPoints
sapply(league_json$schedule, function(x) x$away$teamId)
lapply(league_json$schedule, function(x) x$away$teamId)
sapply(league_json$schedule, function(x) x['away']$teamId)
sapply(league_json$schedule, function(x) x['away'])
sapply(league_json$schedule, function(x) x['away']['totalPoints'])
sapply(league_json$schedule, function(x) x$away$['totalPoints'])
sapply(league_json$schedule, function(x) x$away['totalPoints'])
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
'id_away' = team_names[x$away['teamId']],
'id_home' = team_names[x$home['teamId']],
'away_score' = x$away['totalPoints'],
'home_score' = x$home['totalPoints'],
'winner' = x$winner
)
}) %>% t %>% data.frame
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
'id_away' = team_names[x$away['teamId']],
'id_home' = team_names[x$home['teamId']],
'away_score' = x$away['totalPoints'],
'home_score' = x$home['totalPoints'],
'winner' = x$winner
)
}) %>% t %>% data.frame
sapply(league_json$schedule, function(x) x$away['teamId'])
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
'id_away' = team_names[unlist(x$away['teamId'])],
'id_home' = team_names[unlist(x$home['teamId'])],
'away_score' = x$away['totalPoints'],
'home_score' = x$home['totalPoints'],
'winner' = x$winner
)
}) %>% t %>% data.frame
league_sched_df
### get team scores by week
team_score_df <- league_sched_df %>%
filter(winner != 'UNDECIDED') %>%
pivot_longer(c(id_home, id_away), names_to = 'home_away', values_to = 'team', names_prefix = 'id_') %>%
mutate(
team_score = ifelse(home_away == 'home', home_score, away_score),
week = as.numeric(week),
team_score = as.numeric(team_score)
) %>%
select(game_id, week, team, team_score)
league_sched_df
### turn schedule into data.frame
league_sched_df <- sapply(league_json$schedule, function(x) {
c(
'game_id' = x$id,
'week' = x$matchupPeriodId,
'id_away' = team_names[unlist(x$away['teamId'])],
'id_home' = team_names[unlist(x$home['teamId'])],
'away_score' = unlist(x$away['totalPoints']),
'home_score' = unlist(x$home['totalPoints']),
'winner' = x$winner
)
}) %>% t %>% data.frame
### get team scores by week
team_score_df <- league_sched_df %>%
filter(winner != 'UNDECIDED') %>%
pivot_longer(c(id_home, id_away), names_to = 'home_away', values_to = 'team', names_prefix = 'id_') %>%
mutate(
team_score = ifelse(home_away == 'home', home_score, away_score),
week = as.numeric(week),
team_score = as.numeric(team_score)
) %>%
select(game_id, week, team, team_score)
league_sched_df
### get team scores by week
team_score_df <- league_sched_df %>%
filter(winner != 'UNDECIDED') %>%
pivot_longer(c(id_home, id_away), names_to = 'home_away', values_to = 'team', names_prefix = 'id_') %>%
mutate(
team_score = ifelse(home_away == 'home', home_score.totalPoints, away_score.totalPoints),
week = as.numeric(week),
team_score = as.numeric(team_score)
) %>%
select(game_id, week, team, team_score)
### get team scores by week
team_score_df <- league_sched_df %>%
filter(winner != 'UNDECIDED') %>%
pivot_longer(c(id_home, id_away), names_to = 'home_away', values_to = 'team', names_prefix = 'id_') %>%
mutate(
team_score = ifelse(home_away == 'home', home_score.totalPoints, away_score.totalPoints),
week = as.numeric(week),
team_score = as.numeric(team_score)
) %>%
select(game_id, week, team, team_score)
team_score_df
### join to create round robins & outcomes
rr_matchup_df <- team_score_df %>%
left_join(team_score_df, by = 'week', suffix = c('','_rr')) %>%
filter(team != team_rr) %>%
mutate(
rr_result = case_when(
team_score > team_score_rr ~ 'W',
team_score < team_score_rr ~ 'L',
team_score == team_score_rr ~ 'T'
),
actual_result = ifelse(game_id == game_id_rr, rr_result, NA)
)
rr_matchup_df
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, team_rr, week), paste0(team_rr, team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1)
rr_matchup_df
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = abs(team_score - team_score_rr)) %>%
pull(score_diff) %>% summary
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = abs(team_score - team_score_rr)) %>%
pull(score_diff) %>%
quantile(.1)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = abs(team_score - team_score_rr)) %>%
pull(score_diff) %>%
quantile(.1)
rr_matchup_df %>%
#mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
#group_by(matchup_name) %>%
#mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
#ungroup %>%
mutate(score_diff = team_score - team_score_rr) %>%
pull(score_diff) %>%
quantile(.1)
rr_matchup_df %>%
#mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
#group_by(matchup_name) %>%
#mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
#ungroup %>%
mutate(score_diff = abs(team_score - team_score_rr)) %>%
pull(score_diff) %>%
quantile(.1)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = abs(team_score - team_score_rr)) %>%
pull(score_diff) %>%
quantile(.2)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = team_score - team_score_rr) %>%
pull(score_diff) %>%
quantile(.6)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = team_score - team_score_rr) %>%
pull(score_diff) %>%
quantile(.7)
rr_matchup_df %>%
mutate(matchup_name = ifelse(team > team_rr, paste0(team, '_', team_rr, week), paste0(team_rr, '_', team, week))) %>%
group_by(matchup_name) %>%
mutate(matchup_ord = row_number()) %>%
#filter(matchup_ord == 1) %>%
ungroup %>%
mutate(score_diff = team_score - team_score_rr) %>%
pull(score_diff) %>%
quantile(.6)
install.packages('nflfastR')
library(tidyverse)
brightness <- function(hex) {
result <- rep(0, length(hex))
for (i in 2:7)
{
ch <- substr(hex, i, i)
result <- result + ifelse(i %% 2 == 0, 16, 1) * case_when(
ch == "0" ~ 0, ch == "1" ~ 1, ch == "2" ~ 2, ch == "3" ~ 3, ch == "4" ~ 4,
ch == "5" ~ 5, ch == "6" ~ 6, ch == "7" ~ 7, ch == "8" ~ 8, ch == "9" ~ 9,
ch == "a" | ch == "A" ~ 10,
ch == "b" | ch == "B" ~ 11,
ch == "c" | ch == "C" ~ 12,
ch == "d" | ch == "D" ~ 13,
ch == "e" | ch == "E" ~ 14,
ch == "f" | ch == "F" ~ 15,
TRUE ~ 0
)
}
return(result)
}
stats <- nflfastR::load_player_stats()
library(nflfastR)
stats <- nflfastR::load_player_stats()
stats <- nflfastR::load_player_stats()
all <- stats %>%
filter(season >= 2006) %>%
filter(!is.na(dakota)) %>%
mutate(gid = glue::glue("{season}_{formatC(week, width=2, flag='0')}")) %>%
left_join(nflfastR::teams_colors_logos, by = c("recent_team" = "team_abbr")) %>%
group_by(player_id) %>%
arrange(season) %>%
mutate(team_color = last(team_color), team_color2 = last(team_color2)) %>%
ungroup()
nflfastR
library(tidyverse)
stats <- nflfastR::load_player_stats()
setwd('C:/Users/Owner/Documents/GitHub/NFL-public')
source('https://github.com/ajreinhard/data-viz/raw/master/ggplot/plot_SB.R')
pbp_df <- readRDS(paste0('pfr/pfr_pbp_',1998,'.rds'))
pbp_df <- readRDS(paste0('pfr/pfr_pbp_',1994,'.rds'))
pbp_df %>%
select(epa, pfr_epa)
fran2team
readRDS(paste0('pfr/pfr_pbp_1998.rds')) %>%
mutate_at(
.vars = vars(ends_with('team'))
.funs = function(tm) {
tm = ifelse(tm == 'TNO', 'TEN', tm)
}
) %>%
filter(posteam == 'TEN')
readRDS(paste0('pfr/pfr_pbp_1998.rds')) %>%
mutate_at(
.vars = vars(ends_with('team')),
.funs = function(tm) {
tm = ifelse(tm == 'TNO', 'TEN', tm)
}
) %>%
filter(posteam == 'TEN')
readRDS(paste0('pfr/pfr_pbp_1998.rds')) %>%
mutate_at(
.vars = vars(ends_with('team')),
.funs = function(tm) {
tm = ifelse(tm == 'TNO', 'TEN', tm)
}
) %>%
saveRDS('pfr/pfr_pbp_1998.rds')
readRDS(paste0('pfr/pfr_pbp_1997.rds')) %>%
mutate_at(
.vars = vars(ends_with('team')),
.funs = function(tm) {
tm = ifelse(tm == 'TNO', 'TEN', tm)
}
) %>%
saveRDS('pfr/pfr_pbp_1997.rds')
pbp_df <- lapply(1994:1998, function(x) readRDS(paste0('pfr/pfr_pbp_',x,'.rds'))) %>% do.call(rbind, .)
pbp_df %>%
filter(is.na(posteam)) %>%
pull(side_of_field) %>%
table
pbp_df %>%
filter(is.na(posteam) & season > 1995) %>%
pull(side_of_field) %>%
table
pbp_df %>%
filter(is.na(posteam) & season > 1994) %>%
pull(side_of_field) %>%
table
games <- get_pfr_game_ids(1994)
games %>%
pull(boxscore) %>%
lapply(., get_pfr_pbp) %>%
do.call(rbind, .) %>%
saveRDS('pfr/pfr_pbp_1994.rds')
pbp_df %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining))
pbp_df %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
summarise(mean(n))
pbp_df %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
summarise(median(n))
pbp_df %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
arrange(-n)
pbp_df %>%
group_by(season, game_id) %>%
ggplot(aes(x = season, y = n)) %>%
geom_jitter()
pbp_df %>%
group_by(season, game_id) %>%
ggplot(aes(x = season, y = n)) +
geom_jitter()
pbp_df %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
ggplot(aes(x = season, y = n)) +
geom_jitter()
true_pbp_df <- nflfastR:::load_pbp(1999:2004)
pbp_df %>%
bind_rows(., true_pbp_df) %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
ggplot(aes(x = season, y = n)) +
geom_jitter()
pbp_df %>%
mutate(qtr = as.numeric(qtr)) %>%
bind_rows(., true_pbp_df) %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
ggplot(aes(x = season, y = n)) +
geom_jitter()
readRDS(paste0('pfr/pfr_pbp_1996.rds')) %>%
mutate(qtr = as.numeric(qtr)) %>%
saveRDS('pfr/pfr_pbp_1996.rds')
readRDS(paste0('pfr/pfr_pbp_1995.rds')) %>%
mutate(qtr = as.numeric(qtr)) %>%
saveRDS('pfr/pfr_pbp_1995.rds')
readRDS(paste0('pfr/pfr_pbp_1994.rds')) %>%
mutate(qtr = as.numeric(qtr)) %>%
saveRDS('pfr/pfr_pbp_1994.rds')
readRDS(paste0('pfr/pfr_pbp_1997.rds')) %>%
mutate(qtr = as.numeric(qtr)) %>%
saveRDS('pfr/pfr_pbp_1997.rds')
readRDS(paste0('pfr/pfr_pbp_1998.rds')) %>%
mutate(qtr = as.numeric(qtr)) %>%
saveRDS('pfr/pfr_pbp_1998.rds')
setwd('C:/Users/Owner/Documents/GitHub/NFL-public')
source('https://github.com/ajreinhard/data-viz/raw/master/ggplot/plot_SB.R')
pfr_pbp_df <- lapply(1994:1998, function(x) readRDS(paste0('pfr/pfr_pbp_',x,'.rds'))) %>% do.call(rbind, .)
fastr_pbp_df <- nflfastR:::load_pbp(1999:2002)
all_pbp <- bind_rows(pfr_pbp_df, fastr_pbp_df)
all_pbp %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
ggplot(aes(x = season, y = n)) +
geom_jitter() +
coord_flip()
all_pbp %>%
filter(qtr < 5 & half_seconds_remaining <= 120) %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
ggplot(aes(x = season, y = n)) +
geom_jitter() +
coord_flip()
all_pbp %>%
filter(qtr < 5) %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
ggplot(aes(x = season, y = n)) +
geom_jitter() +
coord_flip()
fastr_pbp_df <- NULL
fastr_pbp_df <- pfr_pbp_df
pfr_pbp_df <- NULL
fastr_pbp_df <- NULL
all_pbp %>%
filter(qtr < 5) %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
ggplot(aes(x = season, y = n)) +
geom_jitter() +
coord_flip()
all_pbp %>%
filter(qtr < 5 & half_seconds_remaining > 120) %>%
group_by(season, game_id) %>%
summarise(n = n_distinct(game_seconds_remaining)) %>%
ggplot(aes(x = season, y = n)) +
geom_jitter() +
coord_flip()
